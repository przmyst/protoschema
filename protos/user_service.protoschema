service UserService {
  rpc GetUser (GetUserRequest) returns (GetUserResponse);
  rpc CreateUser (CreateUserRequest) returns (CreateUserResponse);
}

message User {
  string username = 1 {
    minLength: 3,
    maxLength: 30,
    pattern: "^[a-zA-Z0-9_]+$",
    example: "JohnDoe"
  };

  string email = 2 {
    format: "email",
    example: "joe.doe@example.com"
  };

  int32 age = 3 {
    minimum: 1,
    example: 2
  };

  Address address = 4;
}

message Address {
  string street = 1 {
    minLength: 5,
    example: "123 Main St"
  };
  string city = 2 {
    minLength: 2,
    example: "Reno"
  };
  string country = 3 {
    enum: ["US", "CA", "UK"],
    example: "US"
  };
}

message GetUserRequest {
  int32 user_id = 1 {
    minimum: 1
  };
}

message GetUserResponse {
  User user = 1;
}

message CreateUserRequest {
  User user = 1;
}

message CreateUserResponse {
  User user = 1;
}